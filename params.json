{"body":"# Model.js\r\n\r\nAn easy-lightweigth ORM inspired in the Django framework, and developed over Mootools.Core.Class basis. It let you define new Models (Class style), and provides all the ORM management facilities - In the future I'm going to develop the jQuery version -\r\n\r\nYou can get [the minified version from the downloads](https://github.com/davsket/model-schema/downloads), its only 2.64KB (915 bytes gzipped) or by downloading the complete code, in the `src` folder.\r\n\r\n## Requirements\r\n\r\nThis version requires the Class implementation by Mootools, and it uses require.js (but that's optional)\r\n\r\n## Usage\r\n\r\nFirst import it via require:\r\n\r\n```javascript\r\nrequire(['Model'], function(Model){\r\n\t// Your Code\r\n})\r\n```\r\n\r\nor \r\n\r\n```javascript\r\nModel = require('Model')\r\n```\r\n\r\n### Defining a Model\r\n\r\nCreate a model is as easy as creating a Mootools Class\r\n\r\n```javascript\r\nvar Person = new Model({\r\n\t\tname: null,\r\n\t\tage: null,\r\n\t\tsex: null\r\n\t})\r\n```\r\n\r\n### Creating objects\r\n\r\nYou have three ways to create a new object:\r\n\r\n```javascript\r\nvar david = new Person({\r\n\t\tname: 'david',\r\n\t\tage: 27,\r\n\t\tsex: 'male'\r\n\t}),\r\n\tcarolina = Person.objects.create({\r\n\t\tname: 'carolina',\r\n\t\tage: 24,\r\n\t\tsex: 'female'\r\n\t}),\r\n\tdiana = carolina.__objects__.create({\r\n\t\tname: 'diana',\r\n\t\tage: 22,\r\n\t\tsex: 'female'\r\n\t})\r\n```\r\n\r\n### Listing the objects\r\n\r\n```javascript\r\nPerson.objects.all() // [david, carolina, diana]\r\ndiana.__objects__.all() // [david, carolina, diana]\r\n```\r\n\r\n### Filter the objects collection\r\n\r\nYou can filter with an object or a function\r\n\r\n```javascript\r\nPerson.objects.filter({sex: 'female'}) // [carolina, diana]\r\n```\r\n```javascript\r\nPerson.objects.filter(function(obj){\r\n\treturn age > 23\r\n}) // [david, carolina]\r\n```\r\n\r\n### Exclude the objects collection\r\n\r\nYou can exclude with an object or a function\r\n\r\n```javascript\r\nPerson.objects.exclude({sex: 'female'}) // [david]\r\n```\r\n```javascript\r\nPerson.objects.exclude(function(obj){\r\n\treturn age > 23\r\n}) // [diana]\r\n```\r\n\r\n### Count collection\r\n\r\nYou can exclude with an object or a function\r\n\r\n```javascript\r\nPerson.objects.count() // 3\r\n```\r\n\r\n### Sort the objects collection\r\n\r\nYou can sort the collection by attribute or function\r\n\r\n```javascript\r\nPerson.objects.sort(function(a, b){\r\n\treturn a.age - b.age\r\n}) // [diana, carolina, david]\r\n```\r\n```javascript\r\nPerson.objects.sort('name') // [david, diana, carolina]\r\n```\r\n\r\n### Get an element by attribute(s)\r\n\r\nYou can get an element by: id, attribute/value, or attributes\r\n\r\n```javascript\r\nPerson.objects.get(david.__id__) // david\r\n```\r\n```javascript\r\nPerson.objects.get('name', carolina.name) // carolina\r\n```\r\n```javascript\r\nPerson.objects.get({age: 22}) // diana\r\n```\r\n\r\n### Delete an element\r\n\r\nYou can delete an element by: id or passing the object\r\n\r\n```javascript\r\nPerson.objects.delete(david.__id__) // returns david\r\nPerson.objects.all // [carolina, diana]\r\n```\r\n```javascript\r\nPerson.objects.delete(diana) // returns diana\r\nPerson.objects.all // [carolina]\r\n```\r\n\r\n## License\r\n\r\nMIT Licensed","name":"Model-schema","tagline":"Simple Javascript Model Schema","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}